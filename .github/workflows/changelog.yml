name: Changelog
on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      future_release:
        description: Specify the value for `--future-release` to make it ready to be released
        required: false
        default: ''
jobs:
  changelog:
    runs-on: ubuntu-latest
    steps:
      - name: Get --project <VALUE>
        id: get_project
        run: echo "::set-output name=project::${GITHUB_REPOSITORY#*/}"
      - name: Get --feature-release <VALUE>
        id: get_future_release
        run: |
          set -xeuo pipefail

          if [[ -z '${{ github.event.inputs.future_release }}' ]]; then
            args=''
          else
            args='--future-release ${{ github.event.inputs.future_release }}'
          fi
          echo "::set-output name=args::${args}"
      - uses: actions/checkout@v2
      - uses: docker://githubchangeloggenerator/github-changelog-generator:1.16.2
        with:
          args: '--user ${{ github.repository_owner }} --project ${{ steps.get_project.outputs.project }} --exclude-labels chore,no-changelog,duplicate,question,invalid,wontfix ${{ steps.get_future_release.outputs.args }}'
        env:
          CHANGELOG_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Update CHANGELOG.md and open a pull request
        run: |
          set -xeuo pipefail

          changes=$(git status --short | wc -l)
          if [[ "$changes" == "0" ]]; then
            exit 0
          fi
          branch="update-changelog/$(date +%s)"
          git config user.email "noreply@github.com"
          git config user.name "GitHub"
          git checkout -b "$branch"
          git add -A
          git commit -m 'Update CHANGELOG.md'
          git push origin "$branch"
          cat <<BODY > body.txt
          *This pull request was automatically created to make CHANGELOG.md the latest*.

          Check the files changes and merge if the changes make sense.
          BODY
          gh pr create --head "$branch" --title 'Update CHANGELOG.md' --body-file body.txt --label chore
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
